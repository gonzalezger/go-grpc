// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: decision.proto

package model

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserInfo_VideoQuality int32

const (
	UserInfo_SD  UserInfo_VideoQuality = 0
	UserInfo_HD  UserInfo_VideoQuality = 1
	UserInfo_UHD UserInfo_VideoQuality = 2
)

// Enum value maps for UserInfo_VideoQuality.
var (
	UserInfo_VideoQuality_name = map[int32]string{
		0: "SD",
		1: "HD",
		2: "UHD",
	}
	UserInfo_VideoQuality_value = map[string]int32{
		"SD":  0,
		"HD":  1,
		"UHD": 2,
	}
)

func (x UserInfo_VideoQuality) Enum() *UserInfo_VideoQuality {
	p := new(UserInfo_VideoQuality)
	*p = x
	return p
}

func (x UserInfo_VideoQuality) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserInfo_VideoQuality) Descriptor() protoreflect.EnumDescriptor {
	return file_decision_proto_enumTypes[0].Descriptor()
}

func (UserInfo_VideoQuality) Type() protoreflect.EnumType {
	return &file_decision_proto_enumTypes[0]
}

func (x UserInfo_VideoQuality) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserInfo_VideoQuality.Descriptor instead.
func (UserInfo_VideoQuality) EnumDescriptor() ([]byte, []int) {
	return file_decision_proto_rawDescGZIP(), []int{1, 0}
}

type UserInfo_VideoBitrate int32

const (
	UserInfo_LOW  UserInfo_VideoBitrate = 0
	UserInfo_MID  UserInfo_VideoBitrate = 1
	UserInfo_HIGH UserInfo_VideoBitrate = 2
)

// Enum value maps for UserInfo_VideoBitrate.
var (
	UserInfo_VideoBitrate_name = map[int32]string{
		0: "LOW",
		1: "MID",
		2: "HIGH",
	}
	UserInfo_VideoBitrate_value = map[string]int32{
		"LOW":  0,
		"MID":  1,
		"HIGH": 2,
	}
)

func (x UserInfo_VideoBitrate) Enum() *UserInfo_VideoBitrate {
	p := new(UserInfo_VideoBitrate)
	*p = x
	return p
}

func (x UserInfo_VideoBitrate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserInfo_VideoBitrate) Descriptor() protoreflect.EnumDescriptor {
	return file_decision_proto_enumTypes[1].Descriptor()
}

func (UserInfo_VideoBitrate) Type() protoreflect.EnumType {
	return &file_decision_proto_enumTypes[1]
}

func (x UserInfo_VideoBitrate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserInfo_VideoBitrate.Descriptor instead.
func (UserInfo_VideoBitrate) EnumDescriptor() ([]byte, []int) {
	return file_decision_proto_rawDescGZIP(), []int{1, 1}
}

type DeviceInfo_VideoDecoder int32

const (
	DeviceInfo_H264 DeviceInfo_VideoDecoder = 0
	DeviceInfo_H265 DeviceInfo_VideoDecoder = 1
	DeviceInfo_VP9  DeviceInfo_VideoDecoder = 2
)

// Enum value maps for DeviceInfo_VideoDecoder.
var (
	DeviceInfo_VideoDecoder_name = map[int32]string{
		0: "H264",
		1: "H265",
		2: "VP9",
	}
	DeviceInfo_VideoDecoder_value = map[string]int32{
		"H264": 0,
		"H265": 1,
		"VP9":  2,
	}
)

func (x DeviceInfo_VideoDecoder) Enum() *DeviceInfo_VideoDecoder {
	p := new(DeviceInfo_VideoDecoder)
	*p = x
	return p
}

func (x DeviceInfo_VideoDecoder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceInfo_VideoDecoder) Descriptor() protoreflect.EnumDescriptor {
	return file_decision_proto_enumTypes[2].Descriptor()
}

func (DeviceInfo_VideoDecoder) Type() protoreflect.EnumType {
	return &file_decision_proto_enumTypes[2]
}

func (x DeviceInfo_VideoDecoder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceInfo_VideoDecoder.Descriptor instead.
func (DeviceInfo_VideoDecoder) EnumDescriptor() ([]byte, []int) {
	return file_decision_proto_rawDescGZIP(), []int{2, 0}
}

type DeviceInfo_Hdr int32

const (
	DeviceInfo_HDR10        DeviceInfo_Hdr = 0
	DeviceInfo_DOLBY_VISION DeviceInfo_Hdr = 1
	DeviceInfo_SDR          DeviceInfo_Hdr = 2
)

// Enum value maps for DeviceInfo_Hdr.
var (
	DeviceInfo_Hdr_name = map[int32]string{
		0: "HDR10",
		1: "DOLBY_VISION",
		2: "SDR",
	}
	DeviceInfo_Hdr_value = map[string]int32{
		"HDR10":        0,
		"DOLBY_VISION": 1,
		"SDR":          2,
	}
)

func (x DeviceInfo_Hdr) Enum() *DeviceInfo_Hdr {
	p := new(DeviceInfo_Hdr)
	*p = x
	return p
}

func (x DeviceInfo_Hdr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceInfo_Hdr) Descriptor() protoreflect.EnumDescriptor {
	return file_decision_proto_enumTypes[3].Descriptor()
}

func (DeviceInfo_Hdr) Type() protoreflect.EnumType {
	return &file_decision_proto_enumTypes[3]
}

func (x DeviceInfo_Hdr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceInfo_Hdr.Descriptor instead.
func (DeviceInfo_Hdr) EnumDescriptor() ([]byte, []int) {
	return file_decision_proto_rawDescGZIP(), []int{2, 1}
}

type DeviceInfo_Sound int32

const (
	DeviceInfo_DOLBY_DIGITAL      DeviceInfo_Sound = 0
	DeviceInfo_STEREO             DeviceInfo_Sound = 1
	DeviceInfo_DOLBY_DIGITAL_PLUS DeviceInfo_Sound = 2
)

// Enum value maps for DeviceInfo_Sound.
var (
	DeviceInfo_Sound_name = map[int32]string{
		0: "DOLBY_DIGITAL",
		1: "STEREO",
		2: "DOLBY_DIGITAL_PLUS",
	}
	DeviceInfo_Sound_value = map[string]int32{
		"DOLBY_DIGITAL":      0,
		"STEREO":             1,
		"DOLBY_DIGITAL_PLUS": 2,
	}
)

func (x DeviceInfo_Sound) Enum() *DeviceInfo_Sound {
	p := new(DeviceInfo_Sound)
	*p = x
	return p
}

func (x DeviceInfo_Sound) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceInfo_Sound) Descriptor() protoreflect.EnumDescriptor {
	return file_decision_proto_enumTypes[4].Descriptor()
}

func (DeviceInfo_Sound) Type() protoreflect.EnumType {
	return &file_decision_proto_enumTypes[4]
}

func (x DeviceInfo_Sound) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceInfo_Sound.Descriptor instead.
func (DeviceInfo_Sound) EnumDescriptor() ([]byte, []int) {
	return file_decision_proto_rawDescGZIP(), []int{2, 2}
}

type ClientInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo   *UserInfo   `protobuf:"bytes,1,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
	DeviceInfo *DeviceInfo `protobuf:"bytes,2,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"`
	PreferDRM  bool        `protobuf:"varint,3,opt,name=preferDRM,proto3" json:"preferDRM,omitempty"`
}

func (x *ClientInfo) Reset() {
	*x = ClientInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_decision_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfo) ProtoMessage() {}

func (x *ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_decision_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfo.ProtoReflect.Descriptor instead.
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return file_decision_proto_rawDescGZIP(), []int{0}
}

func (x *ClientInfo) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *ClientInfo) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *ClientInfo) GetPreferDRM() bool {
	if x != nil {
		return x.PreferDRM
	}
	return false
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoQualityEntitlement UserInfo_VideoQuality `protobuf:"varint,1,opt,name=video_quality_entitlement,json=videoQualityEntitlement,proto3,enum=model.UserInfo_VideoQuality" json:"video_quality_entitlement,omitempty"`
	DataSaver               UserInfo_VideoBitrate `protobuf:"varint,2,opt,name=data_saver,json=dataSaver,proto3,enum=model.UserInfo_VideoBitrate" json:"data_saver,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_decision_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_decision_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_decision_proto_rawDescGZIP(), []int{1}
}

func (x *UserInfo) GetVideoQualityEntitlement() UserInfo_VideoQuality {
	if x != nil {
		return x.VideoQualityEntitlement
	}
	return UserInfo_SD
}

func (x *UserInfo) GetDataSaver() UserInfo_VideoBitrate {
	if x != nil {
		return x.DataSaver
	}
	return UserInfo_LOW
}

type DeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform               string                    `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	UserAgent              string                    `protobuf:"bytes,4,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	ScreenResolution       *DeviceInfo_Resolution    `protobuf:"bytes,5,opt,name=screen_resolution,json=screenResolution,proto3" json:"screen_resolution,omitempty"`
	HwDecodingCapabilities []DeviceInfo_VideoDecoder `protobuf:"varint,6,rep,packed,name=hw_decoding_capabilities,json=hwDecodingCapabilities,proto3,enum=model.DeviceInfo_VideoDecoder" json:"hw_decoding_capabilities,omitempty"`
	HdrCapabilities        []DeviceInfo_Hdr          `protobuf:"varint,7,rep,packed,name=hdr_capabilities,json=hdrCapabilities,proto3,enum=model.DeviceInfo_Hdr" json:"hdr_capabilities,omitempty"`
	SoundCapabilities      []DeviceInfo_Sound        `protobuf:"varint,8,rep,packed,name=sound_capabilities,json=soundCapabilities,proto3,enum=model.DeviceInfo_Sound" json:"sound_capabilities,omitempty"`
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_decision_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_decision_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_decision_proto_rawDescGZIP(), []int{2}
}

func (x *DeviceInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *DeviceInfo) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *DeviceInfo) GetScreenResolution() *DeviceInfo_Resolution {
	if x != nil {
		return x.ScreenResolution
	}
	return nil
}

func (x *DeviceInfo) GetHwDecodingCapabilities() []DeviceInfo_VideoDecoder {
	if x != nil {
		return x.HwDecodingCapabilities
	}
	return nil
}

func (x *DeviceInfo) GetHdrCapabilities() []DeviceInfo_Hdr {
	if x != nil {
		return x.HdrCapabilities
	}
	return nil
}

func (x *DeviceInfo) GetSoundCapabilities() []DeviceInfo_Sound {
	if x != nil {
		return x.SoundCapabilities
	}
	return nil
}

type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimaryProfile  string `protobuf:"bytes,1,opt,name=primary_profile,json=primaryProfile,proto3" json:"primary_profile,omitempty"`
	FallbackProfile string `protobuf:"bytes,2,opt,name=fallback_profile,json=fallbackProfile,proto3" json:"fallback_profile,omitempty"`
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_decision_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_decision_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_decision_proto_rawDescGZIP(), []int{3}
}

func (x *Profile) GetPrimaryProfile() string {
	if x != nil {
		return x.PrimaryProfile
	}
	return ""
}

func (x *Profile) GetFallbackProfile() string {
	if x != nil {
		return x.FallbackProfile
	}
	return ""
}

type RefreshCacheParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshCacheParams) Reset() {
	*x = RefreshCacheParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_decision_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshCacheParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshCacheParams) ProtoMessage() {}

func (x *RefreshCacheParams) ProtoReflect() protoreflect.Message {
	mi := &file_decision_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshCacheParams.ProtoReflect.Descriptor instead.
func (*RefreshCacheParams) Descriptor() ([]byte, []int) {
	return file_decision_proto_rawDescGZIP(), []int{4}
}

type RefreshCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshCacheResponse) Reset() {
	*x = RefreshCacheResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_decision_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshCacheResponse) ProtoMessage() {}

func (x *RefreshCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_decision_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshCacheResponse.ProtoReflect.Descriptor instead.
func (*RefreshCacheResponse) Descriptor() ([]byte, []int) {
	return file_decision_proto_rawDescGZIP(), []int{5}
}

type DeviceInfo_Resolution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  int32 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height int32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *DeviceInfo_Resolution) Reset() {
	*x = DeviceInfo_Resolution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_decision_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfo_Resolution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo_Resolution) ProtoMessage() {}

func (x *DeviceInfo_Resolution) ProtoReflect() protoreflect.Message {
	mi := &file_decision_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo_Resolution.ProtoReflect.Descriptor instead.
func (*DeviceInfo_Resolution) Descriptor() ([]byte, []int) {
	return file_decision_proto_rawDescGZIP(), []int{2, 0}
}

func (x *DeviceInfo_Resolution) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *DeviceInfo_Resolution) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

var File_decision_proto protoreflect.FileDescriptor

var file_decision_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x8a, 0x01, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x44, 0x52, 0x4d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x44, 0x52, 0x4d, 0x22, 0xf6, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x58, 0x0a, 0x19, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x17, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x61, 0x76, 0x65, 0x72, 0x22, 0x27, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x06, 0x0a, 0x02, 0x53, 0x44, 0x10, 0x00,
	0x12, 0x06, 0x0a, 0x02, 0x48, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x48, 0x44, 0x10,
	0x02, 0x22, 0x2a, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x49,
	0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x49, 0x47, 0x48, 0x10, 0x02, 0x22, 0xcc, 0x04,
	0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x49, 0x0a, 0x11, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x10, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x18, 0x68, 0x77, 0x5f, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x72, 0x52, 0x16, 0x68, 0x77, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x10,
	0x68, 0x64, 0x72, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x48, 0x64, 0x72, 0x52, 0x0f, 0x68,
	0x64, 0x72, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x46,
	0x0a, 0x12, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x6f,
	0x75, 0x6e, 0x64, 0x52, 0x11, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x3a, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x22, 0x2b, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x32, 0x36, 0x34, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x48, 0x32, 0x36, 0x35, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x56, 0x50, 0x39, 0x10, 0x02, 0x22,
	0x2b, 0x0a, 0x03, 0x48, 0x64, 0x72, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x44, 0x52, 0x31, 0x30, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x4f, 0x4c, 0x42, 0x59, 0x5f, 0x56, 0x49, 0x53, 0x49, 0x4f,
	0x4e, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x44, 0x52, 0x10, 0x02, 0x22, 0x3e, 0x0a, 0x05,
	0x53, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x4f, 0x4c, 0x42, 0x59, 0x5f, 0x44,
	0x49, 0x47, 0x49, 0x54, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x45, 0x52,
	0x45, 0x4f, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x4f, 0x4c, 0x42, 0x59, 0x5f, 0x44, 0x49,
	0x47, 0x49, 0x54, 0x41, 0x4c, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x10, 0x02, 0x22, 0x5d, 0x0a, 0x07,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x95, 0x01, 0x0a, 0x11, 0x44, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12,
	0x36, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x45, 0x75, 0x72, 0x6f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
	0x2f, 0x67, 0x70, 0x73, 0x2d, 0x64, 0x65, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_decision_proto_rawDescOnce sync.Once
	file_decision_proto_rawDescData = file_decision_proto_rawDesc
)

func file_decision_proto_rawDescGZIP() []byte {
	file_decision_proto_rawDescOnce.Do(func() {
		file_decision_proto_rawDescData = protoimpl.X.CompressGZIP(file_decision_proto_rawDescData)
	})
	return file_decision_proto_rawDescData
}

var file_decision_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_decision_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_decision_proto_goTypes = []interface{}{
	(UserInfo_VideoQuality)(0),    // 0: model.UserInfo.VideoQuality
	(UserInfo_VideoBitrate)(0),    // 1: model.UserInfo.VideoBitrate
	(DeviceInfo_VideoDecoder)(0),  // 2: model.DeviceInfo.VideoDecoder
	(DeviceInfo_Hdr)(0),           // 3: model.DeviceInfo.Hdr
	(DeviceInfo_Sound)(0),         // 4: model.DeviceInfo.Sound
	(*ClientInfo)(nil),            // 5: model.ClientInfo
	(*UserInfo)(nil),              // 6: model.UserInfo
	(*DeviceInfo)(nil),            // 7: model.DeviceInfo
	(*Profile)(nil),               // 8: model.Profile
	(*RefreshCacheParams)(nil),    // 9: model.RefreshCacheParams
	(*RefreshCacheResponse)(nil),  // 10: model.RefreshCacheResponse
	(*DeviceInfo_Resolution)(nil), // 11: model.DeviceInfo.Resolution
}
var file_decision_proto_depIdxs = []int32{
	6,  // 0: model.ClientInfo.userInfo:type_name -> model.UserInfo
	7,  // 1: model.ClientInfo.deviceInfo:type_name -> model.DeviceInfo
	0,  // 2: model.UserInfo.video_quality_entitlement:type_name -> model.UserInfo.VideoQuality
	1,  // 3: model.UserInfo.data_saver:type_name -> model.UserInfo.VideoBitrate
	11, // 4: model.DeviceInfo.screen_resolution:type_name -> model.DeviceInfo.Resolution
	2,  // 5: model.DeviceInfo.hw_decoding_capabilities:type_name -> model.DeviceInfo.VideoDecoder
	3,  // 6: model.DeviceInfo.hdr_capabilities:type_name -> model.DeviceInfo.Hdr
	4,  // 7: model.DeviceInfo.sound_capabilities:type_name -> model.DeviceInfo.Sound
	5,  // 8: model.DecisioningEngine.GetBestProfiles:input_type -> model.ClientInfo
	9,  // 9: model.DecisioningEngine.RefreshCache:input_type -> model.RefreshCacheParams
	8,  // 10: model.DecisioningEngine.GetBestProfiles:output_type -> model.Profile
	10, // 11: model.DecisioningEngine.RefreshCache:output_type -> model.RefreshCacheResponse
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_decision_proto_init() }
func file_decision_proto_init() {
	if File_decision_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_decision_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_decision_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_decision_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_decision_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_decision_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshCacheParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_decision_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshCacheResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_decision_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfo_Resolution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_decision_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_decision_proto_goTypes,
		DependencyIndexes: file_decision_proto_depIdxs,
		EnumInfos:         file_decision_proto_enumTypes,
		MessageInfos:      file_decision_proto_msgTypes,
	}.Build()
	File_decision_proto = out.File
	file_decision_proto_rawDesc = nil
	file_decision_proto_goTypes = nil
	file_decision_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DecisioningEngineClient is the client API for DecisioningEngine service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DecisioningEngineClient interface {
	GetBestProfiles(ctx context.Context, in *ClientInfo, opts ...grpc.CallOption) (*Profile, error)
	RefreshCache(ctx context.Context, in *RefreshCacheParams, opts ...grpc.CallOption) (*RefreshCacheResponse, error)
}

type decisioningEngineClient struct {
	cc grpc.ClientConnInterface
}

func NewDecisioningEngineClient(cc grpc.ClientConnInterface) DecisioningEngineClient {
	return &decisioningEngineClient{cc}
}

func (c *decisioningEngineClient) GetBestProfiles(ctx context.Context, in *ClientInfo, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := c.cc.Invoke(ctx, "/model.DecisioningEngine/GetBestProfiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *decisioningEngineClient) RefreshCache(ctx context.Context, in *RefreshCacheParams, opts ...grpc.CallOption) (*RefreshCacheResponse, error) {
	out := new(RefreshCacheResponse)
	err := c.cc.Invoke(ctx, "/model.DecisioningEngine/RefreshCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DecisioningEngineServer is the server API for DecisioningEngine service.
type DecisioningEngineServer interface {
	GetBestProfiles(context.Context, *ClientInfo) (*Profile, error)
	RefreshCache(context.Context, *RefreshCacheParams) (*RefreshCacheResponse, error)
}

// UnimplementedDecisioningEngineServer can be embedded to have forward compatible implementations.
type UnimplementedDecisioningEngineServer struct {
}

func (*UnimplementedDecisioningEngineServer) GetBestProfiles(context.Context, *ClientInfo) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBestProfiles not implemented")
}
func (*UnimplementedDecisioningEngineServer) RefreshCache(context.Context, *RefreshCacheParams) (*RefreshCacheResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshCache not implemented")
}

func RegisterDecisioningEngineServer(s *grpc.Server, srv DecisioningEngineServer) {
	s.RegisterService(&_DecisioningEngine_serviceDesc, srv)
}

func _DecisioningEngine_GetBestProfiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DecisioningEngineServer).GetBestProfiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.DecisioningEngine/GetBestProfiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DecisioningEngineServer).GetBestProfiles(ctx, req.(*ClientInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _DecisioningEngine_RefreshCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshCacheParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DecisioningEngineServer).RefreshCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.DecisioningEngine/RefreshCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DecisioningEngineServer).RefreshCache(ctx, req.(*RefreshCacheParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _DecisioningEngine_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.DecisioningEngine",
	HandlerType: (*DecisioningEngineServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBestProfiles",
			Handler:    _DecisioningEngine_GetBestProfiles_Handler,
		},
		{
			MethodName: "RefreshCache",
			Handler:    _DecisioningEngine_RefreshCache_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "decision.proto",
}
